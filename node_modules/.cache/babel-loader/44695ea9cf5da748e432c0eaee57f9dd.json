{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Marina\\\\Documents\\\\GitHub\\\\goit-react-hw-01-components\\\\src\\\\components\\\\Friend\\\\FriendList\\\\FriendList.jsx\";\nimport PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\nimport FriendItem from '../FriendItem/FriendItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend-list\",\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendItem, {\n      avatar: friend.avatar,\n      name: friend.name,\n      isOnline: friend.isOnline\n    }, friend.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 13\n  }, this);\n};\n_c = FriendList;\nexport default FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.exact({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/Marina/Documents/GitHub/goit-react-hw-01-components/src/components/Friend/FriendList/FriendList.jsx"],"names":["PropTypes","css","FriendItem","FriendList","friends","map","friend","avatar","name","isOnline","id","propTypes","arrayOf","exact","number","isRequired","string","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAiB;AAAA,MAAhB;AAAEC,IAAAA;AAAF,GAAgB;AACvC,sBAAQ;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA,cACHA,OAAO,CAACC,GAAR,CACGC,MAAM,iBACF,QAAC,UAAD;AAEI,MAAA,MAAM,EAAEA,MAAM,CAACC,MAFnB;AAGI,MAAA,IAAI,EAAED,MAAM,CAACE,IAHjB;AAII,MAAA,QAAQ,EAAEF,MAAM,CAACG;AAJrB,OACSH,MAAM,CAACI,EADhB;AAAA;AAAA;AAAA;AAAA,YAFP;AADG;AAAA;AAAA;AAAA;AAAA,UAAR;AAWH,CAZM;KAAMP,U;AAcb,eAAeA,UAAf;AAEAA,UAAU,CAACQ,SAAX,GAAuB;AACnBP,EAAAA,OAAO,EAAEJ,SAAS,CAACY,OAAV,CACLZ,SAAS,CAACa,KAAV,CAAgB;AACZH,IAAAA,EAAE,EAAEV,SAAS,CAACc,MAAV,CAAiBC,UADT;AAEZR,IAAAA,MAAM,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAFb;AAGZP,IAAAA,IAAI,EAAER,SAAS,CAACgB,MAAV,CAAiBD,UAHX;AAIZN,IAAAA,QAAQ,EAAET,SAAS,CAACiB,IAAV,CAAeF;AAJb,GAAhB,CADK,EAOPA;AARiB,CAAvB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './FriendList.module.css';\r\n\r\nimport FriendItem from '../FriendItem/FriendItem';\r\n\r\nexport const FriendList = ({ friends }) => {\r\n    return (<ul className=\"friend-list\">\r\n        {friends.map(\r\n            friend => (\r\n                <FriendItem\r\n                    key={friend.id}\r\n                    avatar={friend.avatar}\r\n                    name={friend.name}\r\n                    isOnline={friend.isOnline}\r\n                    \r\n                />))}\r\n    </ul>)\r\n}\r\n\r\nexport default FriendList; \r\n\r\nFriendList.propTypes = {\r\n    friends: PropTypes.arrayOf(\r\n        PropTypes.exact({\r\n            id: PropTypes.number.isRequired,\r\n            avatar: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            isOnline: PropTypes.bool.isRequired,\r\n        })\r\n    ).isRequired\r\n}"]},"metadata":{},"sourceType":"module"}